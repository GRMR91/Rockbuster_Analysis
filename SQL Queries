-- Creating a new table

CREATE TABLE employees
(
employee_id VARCHAR(30) NOT NULL,
name VARCHAR(50),
contact_number VARCHAR(30),
designation_id INTEGER,
last_update TIMESTAMP NOT NULL DEFAULT now(),
CONSTRAINT employee_pkey PRIMARY KEY (employee_id)
);

## EXPLORATION

-- What is the average rental for each category?

SELECT 
AVG (rental_rate) AS "Average rental rate",
rating AS "Rating"
FROM film
GROUP BY rating
ORDER BY rating;

-- What are the minimum and maximum rental duration for each rating category?

SELECT 
MIN (rental_duration) AS "Minimum rental duration",
MAX (rental_duration) AS "Maximum rental duration",
rating AS "Rating"
FROM film 
GROUP BY rating
ORDER BY rating;

-- Assess rental duration stats by rating type

SELECT rating,
COUNT (film_id) AS "Count of movies",
AVG (rental_rate) AS "Average rental rate",
MIN (rental_duration) AS "Minimum rental duration",
MAX (rental_duration) AS "Maximum rental duration"
FROM film 
GROUP BY rating;


## SUMMARY STATS

 -- Review the descriptive statistics of the numeric column in the film table

SELECT 
MIN(rental_rate) AS min_renatl_rate,
MAX(rental_rate) AS max_rental_rate,
AVG(rental_rate) AS avg_renatal_rate,
MIN(rental_duration) AS min_rental_duration,
MAX(rental_duration) AS max_rental_duration,
AVG(rental_duration) AS avg_rental_duration,
MIN(replacement_cost) AS min_replacement_cost,
MAX(replacement_cost) AS max_replacement_cost,
AVG(replacement_cost) AS avg_replacement_cost,
MIN(length) AS min_length,
MAX(length) AS max_length,
AVG(length) AS avg_length
FROM film;

 -- Review the descriptive statistics of the numeric column in the customer table

SELECT 
MIN(active) AS min_active,
MAX(active) AS max_active,
AVG(active) AS avg_active,
MIN(address_id) AS min_address,
MAX(address_id) AS max_address,
AVG(address_id) AS avg_address,
MIN(customer_id) AS min_customer,
MAX(customer_id) AS max_customer,
AVG(customer_id) AS avg_customer,
MIN(store_id) AS min_store,
MAX(store_id) AS max_store,
AVG(store_id) AS avg_store
FROM customer;

 -- Mode value for non-numerical columns for film table

SELECT
mode() WITHIN GROUP (ORDER BY rating)
AS rating_value,
mode() WITHIN GROUP (ORDER BY special_features)
AS Feature_value,
mode() WITHIN GROUP (ORDER BY release_year)
AS year_value,
mode() WITHIN GROUP (ORDER BY title)
AS title_value,
COUNT(*) AS count_rows
FROM film;

-- Mode value for non-numerical columns for customer table

SELECT
 mode() WITHIN GROUP (ORDER BY first_name)
AS first_name_value,
mode() WITHIN GROUP (ORDER BY last_name)
AS last_name_value,
mode() WITHIN GROUP (ORDER BY email)
AS email_value,
COUNT(*)
FROM customer;


## FINDING DUPLICATES

-- Searching for duplicate values in the film table

SELECT title,
       release_year,
       language_id,
       rental_duration,
       COUNT(*)
FROM film
GROUP BY title,
         release_year,
         language_id,
         rental_duration
HAVING COUNT(*) >1;

-- Searching for duplicate values in the customer table

SELECT first_name,
	   last_name,
	   email,
	   address_id,
       COUNT(*)
FROM customer
GROUP BY first_name,
	   last_name,
	   email,
	   address_id
HAVING COUNT(*) >1;

## ANALYSIS

 -- Find the top 10 countries for Rockbuster regarding customer numbers 

SELECT d.country,
COUNT(A.customer_id) AS "customer_total"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
GROUP BY country
ORDER BY customer_total DESC
LIMIT 10;

 -- Find the top 10 cities in the countries outlined in the above query

SELECT C.city,
COUNT(A.customer_id) AS "customer_total"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
WHERE country IN
('India',
'China'
'United States',
'Japan',
'Mexico',
'Brazil',
'Russian Federation',
'Philippines',
'Turkey',
'Indonesia')
GROUP BY city
ORDER BY customer_total DESC
LIMIT 10;

 -- Find the top 5 customers in the top ten cities who have paid the highest total amounts to Rockbuster 

SELECT A.customer_id,
A.first_name,
A.last_name,
C.city,
D.country,
SUM(E.amount) AS "total_amount"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
INNER JOIN payment E ON A.customer_id = E.customer_id
WHERE city IN ('Aurora',' Shimoga', 'Aparecida de Goinia', 'Emeishan', 'Pontianak', 'Tarsus', 'Atlixco', 'Zalantun', 'Rio Claro', 'Tokat')
GROUP BY A.customer_id, C.city, D.country
ORDER BY total_amount DESC
LIMIT 5;

 -- Find the average amount paid by the top customers in the cities outlined above

SELECT AVG(total_amount_paid.total_amount_paid) AS "Average"
FROM

	(SELECT A.customer_id,
	A.first_name,
	A.last_name,
	C.city,
	D.country,
	SUM(E.amount) AS "total_amount_paid"
	FROM customer A
	INNER JOIN address B ON A.address_id = B.address_id
	INNER JOIN city C ON B.city_id = C.city_id
	INNER JOIN country D ON C.country_id = D.country_id
	INNER JOIN payment E ON A.customer_id = E.customer_id
	WHERE city IN ('Aurora',' Shimoga', 'Aparecida de Goinia', 'Emeishan', 'Pontianak', 'Tarsus', 'Atlixco', 'Zalantun', 'Rio Claro', 'Tokat')
	GROUP BY A.customer_id, C.city, D.country
	ORDER BY total_amount_paid DESC
	LIMIT 5) 
	AS total_amount_paid;

-- Use a CTE to find out how many of the top 5 customers are based within each country?


WITH top_five_countries_CTE (first_name, last_name, country, total_amount_paid) AS 
	(SELECT A.customer_id,
	A.first_name,
	A.last_name,
	C.city,
	D.country AS places,
	SUM(E.amount) AS total_amount_paid
	FROM customer A
	INNER JOIN address B ON A.address_id = B.address_id
	INNER JOIN city C ON B.city_id = C.city_id
	INNER JOIN country D ON C.country_id = D.country_id
	INNER JOIN payment E ON A.customer_id = E.customer_id
	WHERE c.CITY in ('Aurora',' Shimoga', 'Aparecida de Goinia', 'Emeishan', 'Pontianak', 'Tarsus', 'Atlixco', 'Zalantun', 'Rio Claro', 'Tokat')
	 AND D.country IN ('India', 'China', 'United States', 'Japan', 'Mexico', 'Brazil', 'Russian Federation', 'Philippines', 'Turkey', 'Indonesia')
	 GROUP BY 
	 A.customer_id,
	 A.first_name,
	 A.last_name,
	 D.country,
	 C.city
	 ORDER BY total_amount_paid DESC
	 LIMIT 5) 
	

SELECT country.country,
	 COUNT (DISTINCT customer.customer_id) AS all_customer_count,
	 COUNT (DISTINCT country.country) AS top_customer_count
	 FROM country
	 INNER JOIN city ON country.country_id = city.country_id
	INNER JOIN address ON address.city_id = city.city_id
	INNER JOIN customer ON customer.address_id = address.address_id
	LEFT JOIN top_five_countries_CTE ON top_five_countries_CTE.country = country.country
	GROUP BY country.country
	 ORDER BY all_customer_count DESC
	 LIMIT 5;

